name: Build and Lint

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [16.x]

        steps:
            - name: Checkout Repo
              uses: actions/checkout@v2

            - name: Setup Node.js version ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Cache node_modules
              id: cache-nodemodules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  # caching node_modules
                  path: node_modules
                  key: ${{ runner.os }}-build--${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install Dependencies
              if: steps.cache-nodemodules.outputs.cache-hit != 'true'
              run: npm ci

            - name: Build
              run: npm run prod

    lint-main:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [16.x]

        steps:
            - name: Checkout Repo
              uses: actions/checkout@v2

            - name: Setup Node.js version ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Cache node_modules
              id: cache-nodemodules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  # caching node_modules
                  path: node_modules
                  key: ${{ runner.os }}-build--${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install Dependencies
              if: steps.cache-nodemodules.outputs.cache-hit != 'true'
              run: npm ci

            - name: Linting Main
              run: npm run lint-main

    lint-renderer:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [16.x]

        steps:
            - name: Checkout Repo
              uses: actions/checkout@v2

            - name: Setup Node.js version ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Cache node_modules
              id: cache-nodemodules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  # caching node_modules
                  path: node_modules
                  key: ${{ runner.os }}-build--${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install Dependencies
              if: steps.cache-nodemodules.outputs.cache-hit != 'true'
              run: npm ci

            - name: Linting Renderer
              run: npm run lint-renderer
